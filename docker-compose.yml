version: '3.7'

services:
  api:
    container_name: api
    build:
      context: api
      dockerfile: Dockerfile
    volumes:
      - ./api/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: on-failure
    networks:
      - internal
    depends_on:
      - db
      - redis

  db:
    container_name: db
    image: mongo
    ports:
      - 27017:27017
    networks:
      - internal

  flower:
    container_name: flower
    build: ./worker
    env_file:
      - .env
    volumes:
      - ./worker/:/usr/src/app/
    working_dir: /usr/src/app/
    restart: on-failure
    command: sh -c "celery -A tasks flower"
    ports:
      - 5555:5555
    networks:
      - fetch
    depends_on:
      - rabbitmq

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - fetch

  redis:
    container_name: redis
    image: redis
    env_file:
      - .env
    ports:
      - 6379:6379
    networks:
      - internal

  celery_beat:
    container_name: celery_beat
    build:
      context: worker
      dockerfile: Dockerfile
    env_file:
      - .env
    command: sh -c "sh ./run_celery_beat.sh"
    volumes:
      - ./worker/:/usr/src/app/
    networks:
      - internal
      - fetch
    depends_on:
      - rabbitmq
      - redis
      - db
      - api

  celery_worker:
    container_name: celery_worker
    build:
      context: worker
      dockerfile: Dockerfile
    env_file:
      - .env
    command: sh -c "sh ./run_celery_app.sh"
    volumes:
      - ./worker/:/usr/src/app/
    networks:
      - internal
      - fetch
    depends_on:
      - rabbitmq
      - db

  celery_crud:
    container_name: celery_crud
    build:
      context: worker
      dockerfile: Dockerfile
    env_file:
      - .env
    command: sh -c "sh ./run_celery_crud.sh"
    volumes:
      - ./worker/:/usr/src/app/
    networks:
      - internal
      - fetch
    depends_on:
      - rabbitmq
      - db

  fail_queue_api:
    container_name: fail_queue_api
    build:
      context: fail_queue
      dockerfile: Dockerfile
    env_file:
      - .env_fq
    ports:
      - 8080:8080
    command: sh -c "uvicorn main:app --host 0.0.0.0 --port 8080"
    volumes:
      - ./fail_queue/:/usr/src/app/
    networks:
      - internal
      - fail_nw
    depends_on:
      - fail_queue_rabbitmq
      - db

  fail_queue_worker:
    container_name: fail_queue_worker
    build:
      context: fail_queue
      dockerfile: Dockerfile
    env_file:
      - .env_fq
    command: sh -c "sh ./run_celery.sh"
    volumes:
      - ./fail_queue/:/usr/src/app/
    networks:
      - fail_nw
      - internal
    depends_on:
      - db
      - fail_queue_rabbitmq
      - fail_queue_api
    
  fail_queue_rabbitmq:
    container_name: fail_queue_rabbitmq
    image: rabbitmq:3-management
    env_file:
      - .env_fq
    ports:
      - 5673:5672
      - 15673:15672
    networks:
      - fail_nw

networks:
  internal:
  fetch:
  fail_nw: